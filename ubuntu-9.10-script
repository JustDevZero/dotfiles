#!/bin/bash
#       ubuntu-9.10-script
#
#       Copyright 2010 Mephiston <meph.snake@gmail.com>
#
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 3 of the License, or
#       (at your option) any later version.
#
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#       MA 02110-1301, USA.
#     Script which should help users install / tweak some stuff immediately
#     after installing Ubuntu 10.04 Lucid Lynx 32bit and 64bit.
#

#Credits:
#Alin Andrei, http://www.webupd8.org for the original script
#andreineculau.com for original Pidgin icons, Mongi Gazelle for the sharp fonts script.
#based on the idea of: http://czytelnia.ubuntu.pl/index.php/2009/11/03/skrypt-ulatwiajacy-konfiguracje-ubuntu-9-10-karmic-koala/, but Ubuntu Start is a completely re-written script with lots of new features.
#####################
#Options explainations:
#Move window buttons to the left (Jaunty style) - will move the metacity window buttons to the right side, in the following order: Minimize, Maximize, Close
#Change Update Manager behavior to the one in Jaunty - Ubuntu 9.04 (and newer) introduced a change to the handling of package updates, launching update-manager directly instead of displaying a notification icon in the GNOME panel. Users will still be notified of security updates on a daily basis, but for updates that are not security-related, users will only be prompted once a week. This tweak makes the update-manager not pop-up, but always show the updates in the notification area.
#Remove mounted drive icons from desktop - removes ntfs and usb drives from the desktop; usually when mounting a drive it shows up on the desktop
#Disable the GDM login sound - all the sounds in Ubuntu can be turned off from a GUI except this one. This is the sound produced when the GDM login screen loads.
#Enable the icons in menus and buttons - the icons in menus and buttons were removed in Gnome 2.28 (starting with Ubuntu Karmic). However, up until Lucid, users were able to enable these from the Appearence dialog preferences. This is no longer possible so use this tweak instead.
#Disable the GDM login user list - in Lucid, the users are displayed in the GDM login screen (which IMO is a security concern). This fix will make no user show up in this list, and for logging in you must enter your username and password manually.
#Change Gnome Calendar first day of the week from Sunday to Monday tweak - Gnome Calendar comes with Sunday as the first day of the week if the user has en_US language and there's no GUI way to change this. This tweak fixes this for non-US citizens using en_US Ubuntu (only use for en_US Ubuntu!)
#Remove the ubuntu-docs package (frees up 252MB): removed the ubuntu-docs package to free up 252 MB of disk space.
#Install and configure sharp fonts: info about this feature, here: http://www.webupd8.org/2009/09/ubuntu-debian-script-to-install-sharp.html
#Fix 'apt-get update' delay for Google Chrome repository - when downloading Google Chrome .deb, it automatically adds the Google Chrome repository. This repository has a known issue which cause "sudo apt-get update" to take a very long time to complete. This tweak fixes this issue.
#Add additional repositories (GetDeb, Medibuntu etc.) - Adds the following repositories: Getdeb, Medibuntu, Ubuntu universe and multiverse and lucid partner.
########
#The second dialog - install packages.


TRUETYPEPATH="/usr/share/fonts/truetype/"
ROOT_UID=0


#check if the user is running lucid 32 or 64bit
if [ "karmic" = `lsb_release -cs` ]; then
   if [ "i686" = `uname -m` ]; then
       echo "using Ubuntu 9.10 Karmic Koala i686 - ok"
       arch=i386
   elif [ "x86_64" = `uname -m` ]; then
       echo "using Ubuntu 9.10 Karmic Koala x86_64 - ok"
       arch=amd64
   else
       /usr/bin/zenity --warning --title="Error" --text="Error: You are not using Ubuntu 9.10 Karmic Koala 32bit or 64bit"
       echo "You are not using Ubuntu 9.10 Karmic Koala 32bit or 64bit, exiting"
       exit
   fi
else
       /usr/bin/zenity --warning --title="Error" --text="Error: You are not using Ubuntu 9.10 Karmic Koala"
       echo "You are not using Ubuntu 9.10 Karmic Koala, exiting"
       exit
fi

# needs to be run with sudo
if [ "$UID" -ne "$ROOT_UID" ];
   then
   /usr/bin/zenity --warning --title="Error" --text="You must have sudo privileges to run this script. Try: sudo ./ubuntu-9.10-script"
   echo "Exiting ... please run the script with sudo (eg: sudo ./ubuntu-9.10-script)"
   exit
fi

# check if there are applications running which can interfere with the script
sleep 1
if ps -U root -u root u | grep "synaptic" | grep -v grep > /dev/null;
       then
       echo "Installation won't work. Please close Synaptic first then try again.";
       /usr/bin/zenity --warning --title="Error" --text="Installation won't work. Close Synaptic first then try again."
       exit
elif ps -U root -u root u | grep "update-manager" | grep -v grep > /dev/null;
       then
       echo "Installation won't work. Please close Update Manager first then try again.";
       /usr/bin/zenity --warning --title="Error" --text="Installation won't work. Close update-manager first then try again."
       exit
elif ps -U root -u root u | grep "software-center" | grep -v grep > /dev/null;
       then
       echo "Installation won't work. Please close Software Center first then try again.";
       /usr/bin/zenity --warning --title="Error" --text="Installation won't work. Close update-manager first then try again."
       exit
elif ps -U root -u root u | grep "apt-get" | grep -v grep > /dev/null;
       then echo "Installation won't work. Please wait for apt-get to finish running, or terminate the process, then try again.";
       /usr/bin/zenity --warning --title="Error" --text="Installation won't work. Wait for apt-get to finish running, or exit it, then try again."
       exit
elif ps -U root -u root u | grep "dpkg" | grep -v grep > /dev/null;
       then
       echo "Installation won't work. Wait for dpkg to finish running, or exit it, then try again.";
       /usr/bin/zenity --warning --title="Error" --text="Installation won't work. Wait for dpkg to finish running, or exit it, then try again."
       exit
fi

#check if the user has an active internet connection
function testConnection()
{
testconnection=`wget --tries=3 --timeout=10 www.google.com -O /tmp/testinternet &>/dev/null 2>&1`
if [ $? != 0 ]; then
echo  "You are not connected to the Internet. Please check your Internet connection and try again."
/usr/bin/zenity --info --text="<b>Error:</b> You are not connected to the Internet but selected an option which requires an Internet Connection. Please fix your Internet connection and try again."
else
echo "Internet connection - ok"
fi
}



#running gconf-tool2 with "sudo" fails to set the options for the current user so this tweak makes it possible to run sudo for gconf-tool2 and change the setting for the current user, not the root user
ON_USER=$(cat /etc/passwd | grep :1000: | cut -d ':' -f 1)
export $(grep -v "^#" ~/.dbus/session-bus/`cat /var/lib/dbus/machine-id`-0)
if sudo -u $ON_USER test -z "$DBUS_SESSION_BUS_ADDRESS" ; then
       eval `sudo -u $ON_USER dbus-launch --sh-syntax --exit-with-session`
fi
echo $ON_USER
echo $DBUS_SESSION
echo $DBUS_SESSION_BUS_ADDRESS
echo $DBUS_SESSION_BUS_WINDOWID
echo $DBUS_SESSION_BUS_PID

#gui 1
choicess=`/usr/bin/zenity --title="Step 1: Tweaks, fixes and repositories" --width=500 --height=450 \
                          --text="Important: \n\n1. If you do not select the 'Add additional repositories' option, you will not be able \nto install some packages in Step 2. \n\n2. for some settings take place, you'll have to log out and then log back in \n(but only do this after both Step 1 and Step 2 have been completed!).\n\n3. Selecting \"Reset\" will reset that option if you've previously used it. Do not select \nboth a tweak and it's reset option! \n\nSelect:" \
                         --list --column="Selected" --column="Tweak" \
                         --checklist FALSE "Move window buttons to the left (Lucid style)" FALSE ">> Reset: Move window buttons to the right (Karmic style)" FALSE "Change Update Manager behavior to the one in Jaunty" FALSE ">> Reset: \"Change Update Manager behavior to the one in Jaunty\"" FALSE "Remove mounted drive icons from desktop" FALSE ">> Reset: \"Remove mounted drive icons from desktop\"" FALSE "Disable the GDM login sound" FALSE ">> Reset: \"Disable the GDM login sound\"" FALSE "Enable the icons in menus and buttons" FALSE ">> Reset: \"Enable the icons in menus and buttons\"" FALSE "Disable the GDM login user list" FALSE ">> Reset \"Disable the GDM login user list\"" FALSE "Change Gnome Calendar first day of the week from Sunday to Monday" FALSE ">> Reset: \"Change Gnome Calendar first day of the week from Sunday to Monday\"" FALSE "Remove the ubuntu-docs package (frees up 252MB)" FALSE ">> Reset \"Remove the ubuntu-docs package (frees up 252MB)\"" FALSE "Install and configure sharp fonts (including Firefox)" FALSE ">> Reset: \"Install and configure sharp fonts (including Firefox)\"" TRUE "Fix 'apt-get update' delay for Google repository" FALSE ">> Reset: \"Fix 'apt-get update' delay for Google repository\"" TRUE "Automatically mount NTFS drives on startup" FALSE ">> Reset: \"Automatically mount NTFS drives on startup\"" TRUE "Add additional repositories (GetDeb, Medibuntu etc.)" TRUE "Install zsh, csh, and tcsh" TRUE "Install a base for zsh, that includes usefull stuff (look readme)" False "Include converters to \".iso\"" False "Install manpages on spanish" False "Install newtworking utilities (traceroute,wireshark,etc.)"`


if [ $? -eq 0 ];
then
        IFS="|"
        for choicee in $choicess
        do
               if [ "$choicee" = "Move window buttons to the left (Lucid style)" ];
                     then
                     sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --type string --set /apps/metacity/general/button_layout "close,minimize,maximize:"
               elif [ "$choicee" = ">> Reset: Move window buttons to the right (Karmic style)" ];
                     then
                     sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --type string --set /apps/metacity/general/button_layout ":minimize,maximize,close"
               elif [ "$choicee" = "Change Update Manager behavior to the one in Jaunty" ];
                     then
                     sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool -s --type bool /apps/update-notifier/auto_launch false
               elif [ "$choicee" = ">> Reset: \"Change Update Manager behavior to the one in Jaunty\"" ];
                     then
                     sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool -s --type bool /apps/update-notifier/auto_launch true
              elif [ "$choicee" = "Remove mounted drive icons from desktop" ];
                     then
                     sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool -s --type bool /apps/nautilus/desktop/volumes_visible false
              elif [ "$choicee" = ">> Reset: \"Remove mounted drive icons from desktop\"" ];
                     then
                     sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool -s --type bool /apps/nautilus/desktop/volumes_visible true
               elif [ "$choicee" = "Disable the GDM login sound" ];
                     then
                     sudo -u gdm gconftool-2 --set /desktop/gnome/sound/event_sounds --type bool false
                     sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --set /desktop/gnome/sound/event_sounds --type bool false
               elif [ "$choicee" = ">> Reset: \"Disable the GDM login sound\"" ];
                     then
                     sudo -u gdm gconftool-2 --set /desktop/gnome/sound/event_sounds --type bool true
                     sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --set /desktop/gnome/sound/event_sounds --type bool true
              elif [ "$choicee" = "Enable the icons in menus and buttons" ];
                     then
                     sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --set /desktop/gnome/interface/buttons_have_icons --type bool true
                     sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --set /desktop/gnome/interface/menus_have_icons --type bool true
              elif [ "$choicee" = ">> Reset: \"Enable the icons in menus and buttons\"" ];
                     then
                     sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --set /desktop/gnome/interface/buttons_have_icons --type bool false
                     sudo -u $ON_USER "DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS gconftool-2 --set /desktop/gnome/interface/menus_have_icons --type bool false
              elif [ "$choicee" = "Disable the GDM login user list" ];
                     then
                     sudo -u gdm gconftool-2 --set --type boolean /apps/gdm/simple-greeter/disable_user_list true
             elif [ "$choicee" = ">> Reset \"Disable the GDM login user list\"" ];
                     then
                     sudo -u gdm gconftool-2 --set --type boolean /apps/gdm/simple-greeter/disable_user_list false
              elif [ "$choicee" = "Remove the ubuntu-docs package (frees up 252MB)" ];
                     then
                     sudo apt-get remove -y --force-yes ubuntu-docs
              elif [ "$choicee" = ">> Reset \"Remove the ubuntu-docs package (frees up 252MB)\"" ];
                     then
                     sudo apt-get -y --force-yes install ubuntu-docs
              elif [ "$choicee" = "Change Gnome Calendar first day of the week from Sunday to Monday" ];
                     then
                     timee=$(cat /etc/default/locale | grep "LC_TIME")
                     if [ ! $timee ]; then
                     timeee=$(/usr/bin/zenity --entry --title="Locale" --text="You've selected to change Gnome Calendar first \nday of the week from Sunday to Monday. Please \nenter your country locale (e.g. en__GB, it__IT and \nso on) - required by this tweak. \n\nIf you do not enter a value, \"en__GB\" will be used.")
                        if [ $timeee ]; then
                            echo LC_TIME=\"$timeee.UTF-8\" | sudo tee -a /etc/default/locale > /dev/null
                        else
                            echo LC_TIME=\"en_GB.UTF-8\" | sudo tee -a /etc/default/locale > /dev/null
                        fi
                     else
                     echo "You already have custom values for LC_TIME, skipping this tweak"
                     fi
              elif [ "$choicee" = ">> Reset: \"Change Gnome Calendar first day of the week from Sunday to Monday\"" ];
                     then
                     sudo rm /etc/default/locale_back; sudo cp /etc/default/locale /etc/default/locale_back; cat /etc/default/locale_back | sudo sed -e '/^LC_TIME.*/d' > /etc/default/locale; sudo rm /etc/default/locale_back
              elif [ "$choicee" = "Install and configure sharp fonts (including Firefox)" ];
                     then
                     testConnection
                     /usr/bin/zenity --info --text="You selected to install Sharp Fonts. This may take a few minutes depending on your connection speed. \n\nClick OK to continue!"
                     cd /tmp
                     echo "Installing Sharpfonts. This may take a few minutes depending on connection speed..."
                     # download and install the cabextract tool
                     echo "Installing the cabextract tool..."
                     sudo apt-get install -y --force-yes cabextract
                     # Download all needed fonts
                     wget http://sharpfonts.com/fonts/andale32.exe
                     wget http://sharpfonts.com/fonts/arial32.exe
                     wget http://sharpfonts.com/fonts/arialb32.exe
                     wget http://sharpfonts.com/fonts/comic32.exe
                     wget http://sharpfonts.com/fonts/courie32.exe
                     wget http://sharpfonts.com/fonts/georgi32.exe
                     wget http://sharpfonts.com/fonts/impact32.exe
                     wget http://sharpfonts.com/fonts/tahoma32.exe
                     wget http://sharpfonts.com/fonts/times32.exe
                     wget http://sharpfonts.com/fonts/trebuc32.exe
                     wget http://sharpfonts.com/fonts/verdan32.exe
                     wget http://sharpfonts.com/fonts/webdin32.exe
                     # create the needed directory if it is not existing
                     if [ ! -d $TRUETYPEPATH ]; then
                     mkdir -p $TRUETYPEPATH
                     fi
                     # Extract all fonts to the truetype directory
                     cabextract -d /usr/share/fonts/truetype/ andale32.exe arial32.exe arialb32.exe comic32.exe courie32.exe georgi32.exe impact32.exe tahoma32.exe times32.exe trebuc32.exe verdan32.exe webdin32.exe
                     # Download the xml files and extract the configuration files into /etc/fonts/
                     wget http://sharpfonts.com/fontconfig.tbz
                     tar xvjpf fontconfig.tbz -C /etc/fonts/
                     rm -r /tmp/*.exe
                     rm /tmp/fontconfig.tbz
                     #Firefox sharp fonts
                     touch ~/.fonts.conf
                     echo "<?xml version=\"1.0\"?><!DOCTYPE fontconfig SYSTEM \"fonts.dtd\">" | tee -a ~/.fonts.conf
             echo "<fontconfig>" | tee -a ~/.fonts.conf
             echo "<match target=\"font\" >" | tee -a ~/.fonts.conf
             echo "<edit mode=\"assign\" name=\"rgba\" >" | tee -a ~/.fonts.conf
             echo "<const>rgb</const>" | tee -a ~/.fonts.conf
                 echo "</edit>" | tee -a ~/.fonts.conf
             echo "</match>" | tee -a ~/.fonts.conf
             echo "<match target=\"font\" >" | tee -a ~/.fonts.conf
             echo "<edit mode=\"assign\" name=\"hinting\" >" | tee -a ~/.fonts.conf
             echo "<bool>true</bool>" | tee -a ~/.fonts.conf
             echo "</edit>" | tee -a ~/.fonts.conf
             echo "</match>" | tee -a ~/.fonts.conf
             echo "<match target=\"font\" >" | tee -a ~/.fonts.conf
             echo "<edit mode=\"assign\" name=\"hintstyle\" >" | tee -a ~/.fonts.conf
             echo "<const>hintfull</const>" | tee -a ~/.fonts.conf
             echo "</edit>" | tee -a ~/.fonts.conf
             echo "</match>" | tee -a ~/.fonts.conf
             echo "<match target=\"font\" >" | tee -a ~/.fonts.conf
             echo "<edit mode=\"assign\" name=\"antialias\" >" | tee -a ~/.fonts.conf
             echo "<bool>true</bool>" | tee -a ~/.fonts.conf
             echo "</edit>" | tee -a ~/.fonts.conf
             echo "</match>" | tee -a ~/.fonts.conf
             echo "</fontconfig>" | tee -a ~/.fonts.conf
             chown $ON_USER ~/.fonts.conf

                     echo "Sharp fonts installation finished... Please remember to logout and login again"

              elif [ "$choicee" = ">> Reset: \"Install and configure sharp fonts (including Firefox)\"" ];
                     then
                     rm /etc/fonts/alias.conf /etc/fonts/local.conf /etc/fonts/misc.conf /etc/fonts/msfonts-rules.conf ~/.fonts.conf
              elif [ "$choicee" = "Fix 'apt-get update' delay for Google repository" ];
                     then
                     echo "Acquire::http::Pipeline-Depth \"0\";" | sudo tee -a /etc/apt/apt.conf.d/90localsettings > /dev/null
              elif [ "$choicee" = ">> Reset: \"Fix 'apt-get update' delay for Google repository\"" ];
                     then
                     sudo rm /etc/apt/apt.conf.d/90localsettings_back; sudo cp /etc/apt/apt.conf.d/90localsettings /etc/apt/apt.conf.d/90localsettings_back; cat /etc/apt/apt.conf.d/90localsettings_back | sudo sed -e '/^Acquire::http::Pipeline-Depth.*/d' > /etc/apt/apt.conf.d/90localsettings; sudo rm /etc/apt/apt.conf.d/90localsettings_back
              elif [ "$choicee" = "Automatically mount NTFS drives on startup" ];
                     then
                         sudo apt-get -y --force-yes install ntfs-3g

                if [ $(cat /etc/fstab | grep '^[^#].*ntfs-3g' > /tmp/checkntfs-3g.txt; cat /tmp/checkntfs-3g.txt | wc -l) -gt 0 ];
                then
                    echo "You already have ntfs-3g enabled"
                else
                    NTFSS=$(sudo blkid -c /dev/null -t TYPE=ntfs | cut -d ':' -f 1 > /tmp/checkntfs.txt)
                    while read curline; do
                          echo $curline #debugging
                          dirr=$(echo $curline | cut -c 6- | sed -e 's/\///g')
                          sudo mkdir /media/$dirr
                          NTFSUUID=$(sudo blkid -c /dev/null -t TYPE=ntfs | grep $curline | cut -d '"' -f 4)
                          echo $NTFSUUID #debugging
                          eval "echo UUID=$NTFSUUID /media/$dirr ntfs-3g      users                        0  0" | sudo tee -a /etc/fstab > /dev/null
                    done < /tmp/checkntfs.txt
                    echo Done!
                fi
                         rm /tmp/checkntfs.txt /tmp/checkntfs-3g.txt
              elif [ "$choicee" = ">> Reset: \"Automatically mount NTFS drives on startup\"" ];
                     then
                     sudo rm /etc/fstab_back; sudo cp /etc/fstab /etc/fstab_back; cat /etc/fstab_back | sudo sed -e '/^UUID.*ntfs-3g.*/d' > /etc/fstab; sudo rm /etc/fstab_back
              elif [ "$choicee" = "Add additional repositories (GetDeb, Medibuntu etc.)" ];
                   then
                   testConnection
                   sudo rm /etc/apt/sources.list_backup
                   sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup
                          /usr/bin/zenity --info --text="Please wait while testing main Medibuntu server and mirrors (it should take about ~20 seconds). Once this is over, a new dialog will pop-up with Step 2: package installation. \n\nClick OK to continue!"
                          testmedibuntu=`wget --tries=1 --timeout=10 http://packages.medibuntu.org/ -O /tmp/testmedibuntumain; cat /tmp/testmedibuntumain | wc -l`
                          testmedibuntuu=`wget --tries=1 --timeout=10 http://mirrors.ucr.ac.cr/medibuntu/ -O /tmp/testmedibuntuu; cat /tmp/testmedibuntuu | wc -l`
                          testmedibuntuuu=`wget --tries=1 --timeout=10 http://mirror.oscc.org.my/medibuntu/ -O /tmp/testmedibuntuuu; cat /tmp/testmedibuntuuu | wc -l`
                          testmedibuntuuuu=`wget --tries=1 --timeout=10 ftp://ftp.leg.uct.ac.za/pub/linux/medibuntu/ -O /tmp/testmedibuntuuuu; cat /tmp/testmedibuntuuuu | wc -l`
                          if [ $testmedibuntu -gt 0 ]; then
                                mediserv="http://packages.medibuntu.org"
                                medibuntuserver="deb http://packages.medibuntu.org/ karmic free non-free"
                                medibuntuSOURCEserver="deb-src http://packages.medibuntu.org/ karmic free non-free"
                          elif [ $testmedibuntuu -gt 0 ]; then
                                mediserv="http://mirrors.ucr.ac.cr/medibuntu"
                                medibuntuserver="deb http://mirrors.ucr.ac.cr/medibuntu/ karmic free non-free"
                                medibuntuSOURCEserver="deb-src http://mirrors.ucr.ac.cr/medibuntu/ karmic free non-free"
                          elif [ $testmedibuntuuu -gt 0 ]; then
                                mediserv="http://mirror.oscc.org.my/medibuntu"
                                medibuntuserver="deb http://mirror.oscc.org.my/medibuntu/ karmic free non-free"
                                medibuntuSOURCEserver="deb-src http://mirror.oscc.org.my/medibuntu/ karmic free non-free"
                          elif [ $testmedibuntuuuu -gt 0 ]; then
                                mediserv="ftp://ftp.leg.uct.ac.za/pub/linux/medibuntu"
                                medibuntuserver="deb ftp://ftp.leg.uct.ac.za/pub/linux/medibuntu/ karmic free non-free"
                                medibuntuSOURCEserver="deb-src ftp://ftp.leg.uct.ac.za/pub/linux/medibuntu/ karmic free non-free"
                          fi
                          rm /tmp/testmedibuntumain /tmp/testmedibuntuu /tmp/testmedibuntuuu /tmp/testmedibuntuuuu

                   cat /etc/apt/sources.list_backup | sed -e '/.*main.*restricted.*/d' > /etc/apt/sources.list; sleep 1  #delete the ubuntu default repositories so we don't get double repos
                   sleep 1 | cp /etc/apt/sources.list /etc/apt/sources.list_medibuntu; cat /etc/apt/sources.list_medibuntu | sed -e '/.*medibuntu.*karmic free non-free/d' > /etc/apt/sources.list; rm /etc/apt/sources.list_medibuntu; sleep 1
                   sleep 1; cp /etc/apt/sources.list /etc/apt/sources.list_empty; cat /etc/apt/sources.list_empty | sed '/^$/d' > /etc/apt/sources.list; sleep 1; rm /etc/apt/sources.list_empty #remove empty lines in sources.list
                   ARRAY=( 'deb http://archive.ubuntu.com/ubuntu karmic main restricted universe multiverse' 'deb-src http://archive.ubuntu.com/ubuntu karmic main restricted universe multiverse' 'deb http://archive.ubuntu.com/ubuntu karmic-updates main restricted universe multiverse' 'deb-src http://archive.ubuntu.com/ubuntu karmic-updates main restricted universe multiverse' 'deb http://archive.ubuntu.com/ubuntu karmic-backports main restricted universe multiverse' 'deb-src http://archive.ubuntu.com/ubuntu karmic-backports main restricted universe multiverse' 'deb http://archive.canonical.com/ubuntu karmic partner' 'deb-src http://archive.canonical.com/ubuntu karmic partner' 'deb http://security.ubuntu.com/ubuntu karmic-security main restricted universe multiverse' 'deb-src http://security.ubuntu.com/ubuntu karmic-security main restricted universe multiverse' $medibuntuserver $medibuntuSOURCEserver 'deb http://archive.getdeb.net/ubuntu karmic-getdeb apps' 'deb-src http://archive.getdeb.net/ubuntu karmic-getdeb apps' )
                  ELEMENTS=${#ARRAY[@]}

                  for (( i=0;i<$ELEMENTS;i++));
                      do
                         repos=`cat /etc/apt/sources.list | grep "${ARRAY[${i}]}"`
                         if [ $? -eq 0 ];
                         then
                              echo "${ARRAY[${i}]}" already exists, skipping
                         else
                              echo "${ARRAY[${i}]}" | sudo tee -a /etc/apt/sources.list > /dev/null # add all the repositories which are not in the sources.list file already
                         fi
                      done
                   testConnection
                   rm /etc/apt/sources.list.d/medibuntu.list /etc/apt/sources.list.d/dropbox.list /etc/apt/sources.list.d/getdeb.list #delete medibuntu, dropbox and getdeb repos if they were placed in a different location (not sources.list) because we'll add them anyway - fix for not getting double repos
                   wget -q -O- $mediserv/medibuntu-key.gpg | sudo apt-key add -
                   #sudo apt-get --quiet update && sudo apt-get --yes --quiet --allow-unauthenticated install medibuntu-keyring && sudo apt-get --quiet update
                   wget -q -O- http://archive.getdeb.net/getdeb-archive.key | sudo apt-key add -
                   sudo apt-get update
                            elif [ "$choicee" = "Install zsh, csh, and tcsh and make zsh default" ];
                     then
                     sudo apt-get install tcsh zsh csh
                     chsh -s /bin/zsh $ON_USER
                     sudo chsh -s /bin/zsh root

              elif [ "$choicee" = "Install a base for zsh, that includes usefull stuff (look readme)" ];
                     then
                     sudo apt-get -y --force-yes gawk mawk recode most htop lame curl scrot vorbis-tools groff groff-base man2html texlive gitg loco caca vnstat colordiff meld

                    #For normal user
                    wget -c http://github.com/Mephiston/dotfiles/raw/master/.zshrc -O ~/.zshrc
                    wget -c http://github.com/Mephiston/dotfiles/raw//master/.zshort -O ~/.zshrc
                    wget -c http://github.com/Mephiston/dotfiles/raw//master/.zcompletion -O ~/.zshrc
                    wget -c http://github.com/Mephiston/dotfiles/raw/master/.zaliases -O ~/.zshrc
                    wget -c http://github.com/Mephiston/dotfiles/raw/master/.zprograms -O ~/.zshrc

                    #For root user
                    sudo wget -c http://github.com/Mephiston/dotfiles/raw/master/.zshrc -O /root/.zshrc
                    sudo wget -c http://github.com/Mephiston/dotfiles/raw//master/.zshort -O /root/.zshrc
                    sudo wget -c http://github.com/Mephiston/dotfiles/raw//master/.zcompletion -O /root/.zshrc
                    sudo wget -c http://github.com/Mephiston/dotfiles/raw/master/.zaliases -O /root/.zshrc
                    sudo wget -c http://github.com/Mephiston/dotfiles/raw/master/.zprograms -O /root/.zshrc
              elif [ "$choicee" = "Include converters to \".iso\"" ];
                     then
                     sudo apt-get -y --force-yes install b5i2iso ccd2iso ccd2iso cdi2iso mdf2iso nrg2iso pdi2iso uif2iso
              elif [ "$choicee" = "Install manpages on spanish" ];
                     then
                     sudo apt-get -y --force-yes install manpages-es manpages-es-extra
              elif [ "$choicee" = "Install newtworking utilities (traceroute,wireshark,etc.)" ];
                     then
                     sudo apt-get -y --force-yes install traceroute tcptraceroute wireshark
               fi
        done
        IFS=""
        /usr/bin/zenity --info --text="Done! We will now proceed to Step 2."
else
        echo cancel selected
fi

#gui 2
choices=`/usr/bin/zenity --title="Step 2: Install packages" --width=520 --height=400 \
                         --text="Choose packages to install:" \
                         --list --column="Selected" --column="Package" --column="Description" \
                         --checklist TRUE "GIMP" "Image Editor" TRUE "Inkscape" "Vector-Based drawing program" FALSE "Easystroke" "Gesture-recognition application for X11 compatible with Tablet-PC and Mouse." TRUE "OpenOffice 3.2" "This will install the lastest version of OpenOffice with a few extras." TRUE "Nautilus extension-pack" "Pack of extensions for nautilus, like imageshack uploader, imagescript, etc" TRUE "Pidgin (including OTR, smileys and plugin pack)" "Multi-protocol instant messaging client" TRUE "Firefox 3.6" "Include last version of Mozilla Firefox (3.6)" FALSE "WINE" "Run Windows applications in Linux (Pulse version, and Winetricks)" TRUE "Chromium-browser" "Open source browser" FALSE "Gnome-Do" "Quick launcher" FALSE "Guake" "Quake-like terminal emulator" TRUE "VLC" "Media player" False "MPlayer" "Media player" False "SMPlayer" "Media player (MPlayer front-end)" TRUE "Thunderbird 3" "Email client" TRUE "Codecs and extras" "Codecs (multimedia, java, flash), additional archives support, DVD support and fonts" TRUE "Shutter" "Shutter is a feature-rich screenshot program." TRUE "Ubuntu-Tweak" "Ubuntu Tweak is an application designed to config Ubuntu easier for everyone." TRUE "Dropbox" "Cross-platform cloud sync application" TRUE "Deluge" "BitTorrent client" TRUE "CCSM" "CompizConfig Settings Manager" TRUE "Skype" "VoIP chat application" TRUE "Google Chrome" "Google's browser" TRUE "Opera Unstable" "Opera's browser unstable version" TRUE "Midori" "A minimalistic browser" FALSE "Development tools" "From build-essential to Subversion, GIT and so on" FALSE "Database Admin Kit" "Install a few packages usefull for a dbadmin (look readme)." TRUE "Uninstall Evolution" "Uninstall evolution mail reader" TRUE "Uninstall Empathy" "Uninstall empathy messenger" FALSE "Clamav" "Antivirus, only if you care about Windows users." FALSE "Virtualbox" "A powerful PC virtualization solution allowing you to run a wide range of OS."`

if [ $? -eq 0 ]
then
        IFS="|"
        testConnection
        /usr/bin/zenity --info --text="The package download and installation will begin. Please do not restart your computer until the script is done. \n\nClick OK to start!"
        for choice in $choices
        do
              if [ "$choice" = "Codecs and extras" ];
                   then
                       if [ "i686" = `uname -m` ]; then
                           sudo add-apt-repository ppa:towolf/codecs/
                           sudo apt-get update
                           sudo echo sun-java6-jre shared/accepted-sun-dlj-v1-1 select true | sudo /usr/bin/debconf-set-selections
                           sudo apt-get install --yes sun-java6-plugin
                           sudo apt-get -y --force-yes install gstreamer0.10-ffmpeg gstreamer0.10-pitfdll gstreamer0.10-plugins-bad gstreamer0.10-plugins-bad-multiverse gstreamer0.10-plugins-ugly gstreamer0.10-plugins-ugly-multiverse libdvdnav4 libdvdread4 libdvdcss2 libxine1-ffmpeg ffmpeg lame flashplugin-nonfree sun-java6-fonts rar unrar p7zip-full p7zip-rar unace-nonfree lha unp ttf-mscorefonts-installer ttf-liberation uncompress libsdl1.2debian-all libtheora libvorbis
                       else
                           sudo add-apt-repository ppa:towolf/codecs/
                           sudo apt-get update
                           sudo echo sun-java6-jre shared/accepted-sun-dlj-v1-1 select true | sudo /usr/bin/debconf-set-selections
                           sudo apt-get install --yes sun-java6-plugin
                           sudo apt-get -y --force-yes install gstreamer0.10-ffmpeg gstreamer0.10-plugins-bad gstreamer0.10-plugins-bad-multiverse gstreamer0.10-plugins-ugly gstreamer0.10-plugins-ugly-multiverse libdvdnav4 libdvdread4 libdvdcss2 libxine1-ffmpeg ffmpeg lame sun-java6-fonts rar unrar p7zip-full p7zip-rar unace-nonfree lha unp ttf-mscorefonts-installer ttf-liberation uncompress libsdl1.2debian-all libtheora libvorbis
                           cd /tmp
                           wget http://download.macromedia.com/pub/labs/flashplayer10/libflashplayer-10.0.45.2.linux-x86_64.so.tar.gz
                           tar xzf libflashplayer-10.0.45.2.linux-x86_64.so.tar.gz
                           sudo mkdir /usr/lib/flashplugin-nonfree/
                           sudo mv libflashplayer.so /usr/lib/flashplugin-nonfree/
                           sudo ln -s /usr/lib/flashplugin-nonfree/libflashplayer.so /usr/lib/mozilla/plugins/libflashplayer.so
                           rm libflashplayer-10.0.45.2.linux-x86_64.so.tar.gz
                      fi
             elif [ "$choice" = "Uninstall Evolution" ];
                   then
                        sudo apt-get remove -y --force-yes --purge evolution evolution-common evolution-couchdb evolution-data-server evolution-documentation-en evolution-exchange evolution-indicator evolution-plugins evolution-webcal libebackend1.2-0 libedata-book1.2-2 libedata-cal1.2-6 libegroupwise1.2-13
             elif [ "$choice" = "Uninstall Empathy" ];
                   then
                        sudo apt-get remove -y --force-yes --purge empathy-doc empathy
             elif [ "$choice" = "Firefox 3.6" ];
                   then
                       if [ -e "/etc/apt/sources.list.d/guido-iodice-firefox-3.6-karmic.list" ]; then
                            sudo apt-get -y --force-yes firefox firefox-gnome-support
                       else
                            sudo add-apt-repository ppa:guido-iodice/firefox-3.6
                            sudo apt-get update
                            sudo apt-get -y --force-yes firefox firefox-gnome-support
                       fi
          elif [ "$choice" = "Thunderbird 3" ];
                   then
                       if [ -e "/etc/apt/sources.list.d/guido-iodice-firefox-3.6-karmic.list" ]; then
                            sudo apt-get -y --force-yes firefox firefox-gnome-support
                       else
                            sudo add-apt-repository ppa:guido-iodice/firefox-3.6
                            sudo apt-get update
                            sudo apt-get -y --force-yes thunderbird thunderbird-gnome-support
                       fi
             elif [ "$choice" = "GIMP" ];
                   then
                        sudo apt-get -y --force-yes install gimp gimp-data-extras gimp-plugin-registry gimp-resynthesizer gnome-xcf-thumbnailer
             elif [ "$choice" = "Easystroke" ];
                   then
                        sudo add-apt-repository ppa:easystroke
                        sudo apt-get update
                        sudo apt-get -y --force-yes install easystroke
             elif [ "$choice" = "Inkscape" ];
                   then
                        sudo apt-get -y --force-yes install inkscape ink-generator python-lxml python-numpy libxml-xql-perl ruby pstoedit
             elif [ "$choice" = "Nautilus extension-pack" ];
                   then
                        mkdir imageshacks
                        cd imageshacks
                        wget "http://gtk-apps.org/CONTENT/content-files/109635-imageshack-uploader_0.7_all.tar.gz"
                        wget "http://gtk-apps.org/CONTENT/content-files/109636-nautilus-imageshack-uploader_0.4_all.deb"
                        tar xvzf "109635-imageshack-uploader_0.7_all.tar.gz"
                        dpkg -i --force-all imageshack-uploader_0.7_all.deb
                        dpkg -i --force-all 109636-nautilus-imageshack-uploader_0.4_all.deb
                        cd ..
                        rm -r imageshacks
                        sudo apt-get -y --force-yes install nautilus-open-terminal nautilus-script-manager nautilus-name-repairer nautilus-gksu nautilus-wallaper nautilus-script-collection-sv nautilus-image-converter nautilus-script-audio-convert
             elif [ "$choice" = "Google Chrome" ];
                   then
                        cd /tmp
                        wget http://dl.google.com/linux/direct/google-chrome-beta_current_${arch}.deb
                        sudo dpkg -i --force-all google-chrome-beta_current_${arch}.deb
                        sudo apt-get install -f -y
                        rm google-chrome-beta_current_${arch}.deb
             elif [ "$choice" = "Opera Unstable" ];
                   then
                        http://snapshot.opera.com/unix/snapshot-6325/opera_10.52.6325_${arch}.deb
                        sudo dpkg -i --force-all opera_10.52.6325_${arch}.deb
                        rm opera_10.52.6325_${arch}.deb
             elif [ "$choice" = "Midori" ];
                   then
                        sudo apt-get -y --force-yes install midori
             elif [ "$choice" = "Skype" ];
                   then
                        cd /tmp
                           wget http://download.skype.com/linux/skype-ubuntu-intrepid_2.1.0.81-1_${arch}.deb
                           sudo dpkg -i --force-all skype-ubuntu-intrepid_2.1.0.81-1_${arch}.deb
                           sudo apt-get install -f -y
                           rm skype-ubuntu-intrepid_2.1.0.81-1_${arch}.deb
             elif [ "$choice" = "Pidgin (including OTR, smileys and plugin pack)" ];
                   then
                        sudo apt-get -y --force-yes install pidgin pidgin-otr pidgin-plugin-pack pidgin-themes
             elif [ "$choice" = "Development tools" ];
                   then
                        sudo add-apt-repository ppa:geany-dev/
                        sudo apt-get update
                        sudo apt-get -y --force-yes install build-essential automake make checkinstall patch dpatch patchutils autotools-dev debhelper quilt fakeroot xutils lintian pbuilder cmake dh-make libtool autoconf git-core gitg subversion bzr gcc g++ geany geany-plugins geany-plugins-addons
             elif [ "$choice" = "WINE" ];
                   then
                        sudo add-apt-repository ppa:neil-aldur
                        sudo apt-get update
                        sudo apt-get -y --force-yes install wine1.2 playonlinux gnome-exe-thumbnailer
                        sudo wget http://www.kegel.com/wine/winetricks -O /usr/bin/winetricks
                        sudo chmod +x /usr/bin/winetricks
             elif [ "$choice" = "Ubuntu-Tweak" ];
                   then
                        sudo add-apt-repository ppa:tualatrix
                        sudo apt-get update
                        sudo apt-get -y --force-yes install ubuntu-tweak
             elif [ "$choice" = "Shutter" ];
                   then
                        sudo add-apt-repository ppa:shutter
                        sudo apt-get update
                        sudo apt-get install shutter
             elif [ "$choice" = "OpenOffice 3.2" ];
                   then
                        sudo add-apt-repository ppa:openoffice-pkgs
                        sudo apt-get update
                        sudo apt-get -y --force-yes install openoffice.org openoffice.org-pdfimport writer2latex writer2latex-manual ooo-thumbnailer
             elif [ "$choice" = "Database Admin Kit" ];
                   then
                        sudo add-apt-repository ppa:geany-dev/
                        sudo apt-get update
                        sudo apt-get -y --force-yes install geany geany-plugins geany-plugins-addons dia dia2code tedia2sql
             elif [ "$choice" = "Virtualbox" ];
                   then
                        echo "deb http://download.virtualbox.org/virtualbox/debian karmic non-free" | sudo tee -a /etc/apt/sources.list > /dev/null
                        wget -q http://download.virtualbox.org/virtualbox/debian/sun_vbox.asc -O- | sudo apt-key add -
                        sudo apt-get update
                        sudo apt-get -y --force-yes install virtualbox-3.1
                        sudo chmod +x /usr/share/applications/virtualbox.desktop
             elif [ "$choice" = "Clamav" ];
                   then
                        sudo add-apt-repository ppa:ubuntu-clamav/
                        sudo apt-get update
                        sudo apt-get -y --force-yes install clamav clamav-docs libclamunrar6
                        wget http://downloads.sourceforge.net/project/clamtk/ClamTk/4.25/clamtk_4.25-1_all.deb
                        sudo dpkg -i --force-all clamtk_4.25-1_all.deb
                        rm clamtk_4.25-1_all.deb
             elif [ "$choice" = "Dropbox" ];
                   then
                         reposs=`cat /etc/apt/sources.list | grep "dropbox"`
                         if [ $? -eq 0 ];
                         then
                              echo "Dropbox repository already exists, skipping repository add"
                              sudo apt-get update
                              sudo apt-get -y --force-yes install nautilus-dropbox
                         else
                              echo "deb http://linux.dropbox.com/ubuntu karmic main" | sudo tee -a /etc/apt/sources.list > /dev/null
                              echo "deb-src http://linux.dropbox.com/ubuntu karmic main" | sudo tee -a /etc/apt/sources.list > /dev/null
                              sudo gpg --keyserver pgp.mit.edu --recv-keys 5044912E
                              sudo apt-get update
                              sudo apt-get -y --force-yes install nautilus-dropbox
                         fi
              elif [ "$choice" = "CCSM" ];
                   then
                        sudo apt-get -y --force-yes install compizconfig-settings-manager

              else
                        choiceLOW=`echo $choice | tr '[:upper:]' '[:lower:]'`
                        sudo apt-get -y --force-yes install $choiceLOW
            fi
       done
#cleaning up
       sudo apt-get autoremove
       sudo apt-get clean
       sudo apt-get autoclean
#notices
       if [[ "$choicee" = "Change Gnome Calendar first day of the week from Sunday to Monday" || "$choicee" = "Install and configure sharp fonts (including Firefox)" || "$choicee" = ">> Reset: \"Change Gnome Calendar first day of the week from Sunday to Monday\"" || "$choicee" = ">> Reset: \"Install and configure sharp fonts (including Firefox)\"" ]]; then
       /usr/bin/zenity --info --text="Done! Please log out and then log back in (this is required for some of the tweaks you've selected). \n\nFor bugs and suggestions, please visit: http://www.webupd8.org"
       else
       /usr/bin/zenity --info --text="Done! All the selected packages have been installed. \n\nFor bugs and suggestions, please visit: http://www.webupd8.org"
       IFS=""
       fi
       rm /tmp/testinternet
else
       rm /tmp/testinternet
       echo cancel selected
       exit
fi
